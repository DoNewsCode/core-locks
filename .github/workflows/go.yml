name: Go
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        go-version: [ 1.17.x,1.18.x ]
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          stable: false
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v3
        id: cache-go-mod
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}

      - name: Environment Variables from Dotenv
        uses: c-py/action-dotenv-to-setenv@v3

      - name: Build
        if: steps.cache-go-mod.outputs.cache-hit != 'true'
        run: go build -v ./...

      - name: Test
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.txt
  lint:
    strategy:
      matrix:
        go-version: [ 1.17.x,1.18.x ]
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45.2
          args: --disable errcheck --timeout 5m0s
          only-new-issues: true
